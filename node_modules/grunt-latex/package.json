{
  "name": "grunt-latex",
  "description": "A Grunt plugin to run LaTeX-related tasks.",
  "version": "0.2.2",
  "homepage": "https://github.com/tvooo/grunt-latex",
  "author": {
    "name": "Tim von Oldenburg",
    "email": "tim@tvooo.de",
    "url": "http://tvooo.de"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/tvooo/grunt-latex.git"
  },
  "bugs": {
    "url": "https://github.com/tvooo/grunt-latex/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/tvooo/grunt-latex/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt-contrib-clean": "~0.4.0",
    "grunt-contrib-nodeunit": "~0.1.2",
    "grunt": "~0.4.1"
  },
  "peerDependencies": {
    "grunt": "~0.4.1"
  },
  "keywords": [
    "gruntplugin",
    "latex",
    "pdf",
    "pdflatex",
    "tex",
    "dvi"
  ],
  "readme": "# grunt-latex\n\n> Compile LaTeX documents using pdflatex and other latex engines.\n\n## Getting Started\nThis plugin requires Grunt `~0.4.1`\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-latex --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-latex');\n```\n\n## The \"latex\" task\n\n### Prerequisites\n\nFor this plugin to work, you need to have a LaTeX distribution installed that comes with the ```pdflatex``` command line application. Common LaTeX distributions are:\n\n* [TeX Live (Linux/Windows)](http://www.tug.org/texlive/)\n* [MacTeX (Mac OS)](http://www.tug.org/mactex/)\n* [MiKTex (Windows)](http://miktex.org/)\n\nFrom version 0.2.0, it is also possible to set the `engine` parameter to use other commands than `pdflatex`, for example `lualatex`. Please note that not all options may be supported by other engines.\n\n### Overview\nIn your project's Gruntfile, add a section named `latex` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  latex: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  }\n});\n```\n\n### Options\n\nCurrently, a few of pdflatex' command line options are supported. If you have the need for more, don't hesitate to file an issue on Github.\n\n#### options.interaction\nType: `String`  \nDefault value: `'nonstopmode'`\n\nSets the interaction mode; can be `'nonstopmode'`, `'batchmode'`, `'scrollmode'` or `'errorstopmode'`.\n\n#### options.draftmode\nType: `Boolean`  \nDefault value: `false`\n\nIf `true`, the task will run in draft mode, e.g. no output PDF will be generated.\n\n#### options.haltOnError\nType: `Boolean`  \nDefault value: `false`\n\nIf `true`, the task will stop processing at the first error.\n\n#### options.outputDirectory\nType: `String`  \nDefault value: `.`\n\nSpecifies the directory to write files into.\n\n#### options.outputFormat\nType: `String`  \nDefault value: `'pdf'`\n\nSpecifies the output format. Can be either `'pdf'` or `'dvi'`.\n\n#### options.auxDirectory\n**MiKTex only!** (gracefully ignored in other distributions, afaik)  \nType: `String`  \nDefault value: not set\n\nSpecifies a folder to store auxiliary files, so that the source/output folder does not get polluted.\n\n#### options.engine\nType: `String`  \nDefault value: `'pdflatex'`\n\nAllows you to set an alternative binary, instead of pdflatex, e.g. `lualatex`. Alternative binaries may not support all other options, so use at your own risk.\n\n#### options.jobname\nType: `String`  \nDefault value: not set\n\nSet a job name (rename the output files). **Warning: Don't use this option on multiple source files if they are in the same folder! Because they all have the same jobname, they will subsequently overwrite each other's output.**\n\n### Usage Examples\n\n#### Default Options\nThe most simple way to use grunt-latex is to specify only the source LaTeX files to be compiled.\n\n```js\ngrunt.initConfig({\n  latex: {\n    src: ['document.tex']\n  },\n});\n```\n\n#### Custom Options\nYou can set task-specific options, but you can also define different targets with target-specific options.\n\n```js\ngrunt.initConfig({\n  latex: {\n    options: {\n      haltOnError: 'true'\n    },\n    pdf_target: {\n      options: {\n        outputDirectory: 'dest/pdf'\n      },\n      src: ['document.tex']\n    },\n    dvi_target: {\n      options: {\n        outputDirectory: 'dest/dvi',\n        outputFormat: 'dvi'\n      },\n      src: ['document.tex']\n    }\n  }\n});\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n0.2.0 Multi-engine support\n0.1.0 Initial release\n\n",
  "readmeFilename": "README.md",
  "_id": "grunt-latex@0.2.2",
  "_from": "grunt-latex@~0.2.2"
}
